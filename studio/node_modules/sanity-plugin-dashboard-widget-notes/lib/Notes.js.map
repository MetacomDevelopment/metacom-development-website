{"version":3,"sources":["../src/Notes.js"],"names":["Notes","Component","constructor","props","client","createIfNotExists","_id","_type","notes","getDocument","then","_updatedAt","setState","draftNotes","unsubscribe","subscription","listen","subscribe","result","e","target","value","isCreatingDraft","state","isSaving","patch","set","commit","updatedDocument","catch","err","console","error","message","render","title","placeholder","backgroundColor","color","textColor","styles","container","spinnerContainer","header","headerIcon","fill","Date","addSuffix","content","textarea","handleChange","footer","borderTopColor","handleSubmit","handleDiscard","propTypes","PropTypes","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { MdSpeakerNotes } from 'react-icons/md';\nimport parseISO from 'date-fns/parseISO';\nimport formatDistance from 'date-fns/formatDistance';\nimport format from 'date-fns/format';\nimport { readableColor, shade } from 'polished';\n\n// eslint-disable-next-line import/no-unresolved\nimport client from 'part:@sanity/base/client';\n// eslint-disable-next-line import/no-unresolved\n// import { PatchEvent, set, unset } from 'part:@sanity/form-builder/patch-event';\n// eslint-disable-next-line import/no-unresolved\nimport Button from 'part:@sanity/components/buttons/default'; // eslint-disable-line import/no-unresolved\nimport Spinner from 'part:@sanity/components/loading/spinner'; // eslint-disable-line import/no-unresolved\n\nimport styles from './Notes.css';\n\nclass Notes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      _updatedAt: null,\n      notes: '',\n      draftNotes: '',\n      isCreatingDraft: false,\n      isSaving: false,\n    };\n  }\n\n  UNSAFE_componentWillMount = () => {\n    client.createIfNotExists({\n      _id: 'dashboard.note',\n      _type: 'dashboardNote',\n      notes: '',\n    });\n  };\n\n  componentDidMount = () => {\n    client.getDocument('dashboard.note').then(({ _updatedAt, notes }) => {\n      this.setState({\n        _updatedAt,\n        notes,\n        draftNotes: notes,\n      });\n    });\n\n    this.unsubscribe();\n    this.subscription = client.listen(\"*[_id == 'dashboard.note']\").subscribe(({ result }) => {\n      const { _updatedAt, notes } = result;\n\n      this.setState({\n        _updatedAt,\n        notes,\n        draftNotes: notes,\n      });\n    });\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      draftNotes: e.target.value,\n      isCreatingDraft: true,\n    });\n  };\n\n  handleSubmit = () => {\n    const { draftNotes } = this.state;\n    this.setState({ isSaving: true });\n\n    client\n      .patch('dashboard.note')\n      .set({ notes: draftNotes })\n      .commit()\n      .then((updatedDocument) => {\n        this.setState({\n          _updatedAt: updatedDocument._updatedAt, // eslint-disable-line no-underscore-dangle\n          notes: draftNotes,\n          isCreatingDraft: false,\n          isSaving: false,\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          isSaving: false,\n        });\n\n        console.error('Oh no, the update failed: ', err.message); // eslint-disable-line no-console\n      });\n  };\n\n  handleDiscard = () => {\n    const { notes } = this.state;\n\n    this.setState({\n      draftNotes: notes,\n      isCreatingDraft: false,\n    });\n  };\n\n  componentWillUnmount = () => {\n    this.unsubscribe();\n  };\n\n  unsubscribe = () => {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  };\n\n  render() {\n    const { error, _updatedAt, draftNotes, isCreatingDraft, isSaving } = this.state;\n\n    const { title, placeholder, backgroundColor, color } = this.props;\n\n    const textColor = color || readableColor(backgroundColor, 'rgb(48, 48, 48)');\n\n    return (\n      <div className={styles.container}>\n        {isSaving && (\n          <div className={styles.spinnerContainer}>\n            <Spinner center message=\"Saving notes…\" />\n          </div>\n        )}\n        <header\n          className={styles.header}\n          style={{\n            backgroundColor: shade(0.05, backgroundColor),\n            color: textColor,\n          }}\n        >\n          <h2 className={styles.title}>\n            {title}\n            <MdSpeakerNotes className={styles.headerIcon} style={{ fill: textColor }} />\n            {_updatedAt && (\n              <span title={format(parseISO(_updatedAt), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")}>\n                {`Edited ${formatDistance(parseISO(_updatedAt), new Date(), { addSuffix: true })}`}\n              </span>\n            )}\n          </h2>\n        </header>\n        {error ? (\n          <div className={styles.content} style={{ backgroundColor }}>\n            <code>Could not load notes …</code>\n          </div>\n        ) : (\n          <>\n            <div className={styles.content} style={{ backgroundColor }}>\n              <textarea\n                spellCheck=\"false\"\n                className={styles.textarea}\n                name=\"notes\"\n                value={draftNotes}\n                onChange={this.handleChange}\n                placeholder={placeholder}\n                style={{ color: textColor }}\n              />\n            </div>\n            <div className={styles.footer} style={{ borderTopColor: shade(0.05, backgroundColor) }}>\n              <Button\n                bleed\n                color=\"primary\"\n                kind=\"simple\"\n                onClick={this.handleSubmit}\n                disabled={!isCreatingDraft}\n              >\n                Save notes\n              </Button>\n\n              <Button\n                bleed\n                color=\"danger\"\n                kind=\"simple\"\n                onClick={this.handleDiscard}\n                disabled={!isCreatingDraft}\n              >\n                Discard changes\n              </Button>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nNotes.propTypes = {\n  title: PropTypes.string,\n  placeholder: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  color: PropTypes.string,\n};\n\nNotes.defaultProps = {\n  title: 'Notes',\n  placeholder: '…',\n  backgroundColor: '#ffff88',\n  color: null,\n};\n\nexport default Notes;\n"],"file":"Notes.js"}